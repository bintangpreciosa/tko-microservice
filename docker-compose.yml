# docker-compose.yml
# Atribut 'version' tidak lagi diperlukan atau digunakan oleh Docker Compose CLI modern.

services:
  # --- DATABASE SERVICES ---
  mysql_products:
    image: mysql:8.0
    container_name: mysql_products_db
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      MYSQL_DATABASE: product_service
    ports:
      - "3307:3306"
    volumes:
      - mysql_products_data:/var/lib/mysql
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
      interval: 5s
      start_period: 90s # Diperbarui

  mysql_orders:
    image: mysql:8.0
    container_name: mysql_orders_db
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      MYSQL_DATABASE: order_service
    ports:
      - "3308:3306"
    volumes:
      - mysql_orders_data:/var/lib/mysql
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
      interval: 5s
      start_period: 90s # Diperbarui

  # mysql_carts: (DIHAPUS)
  #   image: mysql:8.0
  #   container_name: mysql_carts_db
  #   environment:
  #     MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
  #     MYSQL_DATABASE: cart_service
  #   ports:
  #     - "3309:3306"
  #   volumes:
  #     - mysql_carts_data:/var/lib/mysql
  #   networks:
  #     - app_network
  #   healthcheck:
  #     test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
  #     timeout: 20s
  #     retries: 10
  #     interval: 5s
  #     start_period: 90s # Diperbarui

  mysql_payments:
    image: mysql:8.0
    container_name: mysql_payments_db
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      MYSQL_DATABASE: payment_service
    ports:
      - "3310:3306"
    volumes:
      - mysql_payments_data:/var/lib/mysql
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
      interval: 5s
      start_period: 90s # Diperbarui

  mysql_shipments:
    image: mysql:8.0
    container_name: mysql_shipments_db
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      MYSQL_DATABASE: shipment_service
    ports:
      - "3311:3306"
    volumes:
      - mysql_shipments_data:/var/lib/mysql
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
      interval: 5s
      start_period: 90s # Diperbarui

  # --- MICROSERVICE APLIKASI ---

  # Product Service
  product-service:
    build:
      context: ./product-service
      dockerfile: Dockerfile
    container_name: product_service_app
    ports:
      - "4001:4001"
    environment:
      DB_HOST: mysql_products
      DB_PORT: 3306
      DB_USERNAME: root
      DB_PASSWORD: ""
      DB_DATABASE: product_service
      PORT: 4001
    depends_on:
      mysql_products:
        condition: service_healthy
    restart: on-failure
    networks:
      - app_network

  # Customer Adapter Service - Hanya sebagai adapter ke CRM di port 3000
  customer-adapter-service:
    build:
      context: ./customer-adapter-service
      dockerfile: Dockerfile
    container_name: customer_adapter_service_app
    ports:
      - "4006:4006"
    environment:
      NODE_ENV: development
      PORT: 4006
      # URL ke CRM eksternal (ganti dengan URL yang sesuai)
      CRM_SERVICE_URL: http://host.docker.internal:3000/graphql
      # Timeout untuk koneksi ke CRM (dalam milidetik)
      CRM_REQUEST_TIMEOUT: "5000"
    extra_hosts:
      - "host.docker.internal:host-gateway"  # Untuk akses ke host dari container
    restart: on-failure
    networks:
      - app_network

  # Order Service
  order-service:
    build:
      context: ./order-service
      dockerfile: Dockerfile
    container_name: order_service_app
    ports:
      - "4002:4002"
    environment:
      DB_HOST: mysql_orders
      DB_PORT: 3306
      DB_USERNAME: root
      DB_PASSWORD: ""
      DB_DATABASE: order_service
      PORT: 4002
      PRODUCT_SERVICE_URL: http://product-service:4001/graphql
      CUSTOMER_SERVICE_URL: http://customer-adapter-service:4006/graphql
    depends_on:
      mysql_orders:
        condition: service_healthy
      product-service: # Tetap tergantung pada product-service
        condition: service_started
      customer-adapter-service: # Tetap tergantung pada customer-adapter-service
        condition: service_started
    restart: on-failure
    networks:
      - app_network

  # cart-service: (DIHAPUS)
  #   build:
  #     context: ./cart-service
  #     dockerfile: Dockerfile
  #   container_name: cart_service_app
  #   ports:
  #     - "4005:4005"
  #   environment:
  #     DB_HOST: mysql_carts
  #     DB_PORT: 3306
  #     DB_USERNAME: root
  #     DB_PASSWORD: ""
  #     DB_DATABASE: cart_service
  #     PORT: 4005
  #     PRODUCT_SERVICE_URL: http://product-service:4001/graphql
  #     CUSTOMER_SERVICE_URL: http://customer-adapter-service:4006/graphql
  #   depends_on:
  #     mysql_carts:
  #       condition: service_healthy
  #     product-service:
  #       condition: service_started
  #     customer-adapter-service:
  #       condition: service_started
  #   restart: on-failure
  #   networks:
  #     - app_network

  # Payment Service
  payment-service:
    build:
      context: ./payment-service
      dockerfile: Dockerfile
    container_name: payment_service_app
    ports:
      - "4003:4003"
    environment:
      DB_HOST: mysql_payments
      DB_PORT: 3306
      DB_USERNAME: root
      DB_PASSWORD: ""
      DB_DATABASE: payment_service
      PORT: 4003
      # URL untuk mengakses Order Service dari dalam Docker network
      ORDER_SERVICE_URL: http://order-service:4002/graphql
    depends_on:
      mysql_payments:
        condition: service_healthy
      order-service:
        condition: service_started
    restart: on-failure
    networks:
      - app_network

  # Shipment Service
  shipment-service:
    build:
      context: ./shipment-service
      dockerfile: Dockerfile
    container_name: shipment_service_app
    ports:
      - "4004:4004"
    environment:
      DB_HOST: mysql_shipments
      DB_PORT: 3306
      DB_USERNAME: root
      DB_PASSWORD: ""
      DB_DATABASE: shipment_service
      PORT: 4004
      ORDER_SERVICE_URL: http://order-service:4002/graphql
    depends_on:
      mysql_shipments:
        condition: service_healthy
    restart: on-failure
    networks:
      - app_network

# Mendefinisikan volume untuk penyimpanan data persisten database
volumes:
  mysql_products_data:
  mysql_orders_data:
  # mysql_carts_data: (DIHAPUS)
  mysql_payments_data:
  mysql_shipments_data:

# Mendefinisikan jaringan kustom untuk service-service
networks:
  app_network:
    driver: bridge
